{"version":3,"file":"Popup.stories-dcb50ed5.js","sources":["../../node_modules/@restart/hooks/esm/usePrevious.js","../../node_modules/dom-helpers/esm/querySelectorAll.js","../../node_modules/@restart/ui/esm/DataKey.js","../../node_modules/dom-helpers/esm/scrollbarSize.js","../../node_modules/dom-helpers/esm/activeElement.js","../../node_modules/@restart/ui/esm/getScrollbarWidth.js","../../node_modules/@restart/ui/esm/ModalManager.js","../../node_modules/@restart/ui/esm/Modal.js","../../node_modules/dom-helpers/esm/addClass.js","../../node_modules/dom-helpers/esm/removeClass.js","../../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../../node_modules/react-bootstrap/esm/ModalBody.js","../../node_modules/react-bootstrap/esm/ModalContext.js","../../node_modules/react-bootstrap/esm/ModalDialog.js","../../node_modules/react-bootstrap/esm/ModalFooter.js","../../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../../node_modules/react-bootstrap/esm/ModalHeader.js","../../node_modules/react-bootstrap/esm/ModalTitle.js","../../node_modules/react-bootstrap/esm/Modal.js","../../src/Popup.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { Modal, ModalProps } from 'react-bootstrap';\n\nexport type PopupProps = ModalProps & {\n\theader?: string | JSX.Element | any;\n\tfooter?: string | JSX.Element | any;\n};\nexport default function Popup({ header, footer, children, ...props }: PopupProps): JSX.Element {\n\treturn (\n\t\t<Modal animation scrollable centered {...props}>\n\t\t\t{header && <Modal.Header closeButton>{header}</Modal.Header>}\n\t\t\t<Modal.Body>{children}</Modal.Body>\n\t\t\t{footer && <Modal.Footer>{footer}</Modal.Footer>}\n\t\t</Modal>\n\t);\n}\n"],"names":["usePrevious","value","ref","useRef","useEffect","toArray","qsa","element","selector","ATTRIBUTE_PREFIX","dataAttr","property","size","scrollbarSize","recalc","canUseDOM","scrollDiv","activeElement","doc","ownerDocument","active","getBodyScrollbarWidth","window","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","_modal","containerState","style","paddingProp","container","css","m","modal","modalIdx","ModalManager$1","_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","key","manager","getManager","useModalManager","provided","useWindow","modalManager","useCallback","Modal","forwardRef","_ref","show","role","className","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","ownerWindow","useWaitForDOMRef","isMounted","useMounted","prevShow","exited","setExited","useState","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","e","isEscKey","handleHidden","args","dialogProps","dialog","React.cloneElement","renderTransition","backdropElement","_Fragment","ReactDOM","_jsxs","BaseModal","addClass","hasClass","replaceClassName","origClass","classToRemove","removeClass","Selector","BootstrapModalManager","prop","adjust","actual","marginProp","el","sharedManager","getSharedManager","options","ModalBody","createWithBsPrefix","ModalContext","React.createContext","ModalContext$1","ModalDialog","React.forwardRef","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","ModalDialog$1","ModalFooter","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","CloseButton","AbstractModalHeader$1","ModalHeader","ModalHeader$1","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","getScrollbarSize","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","handleEscapeKeyDown","handleEnter","isAppearing","handleExit","handleEntering","addEventListener","handleExited","backdropProps","baseModalStyle","Modal$1","Popup","header","footer","jsxs","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}