{"version":3,"file":"Control-30e952a3.js","sources":["../../node_modules/uncontrollable/lib/esm/utils.js","../../node_modules/uncontrollable/lib/esm/hook.js","../../node_modules/react-bootstrap/esm/Alert.js","../../node_modules/react-bootstrap/esm/ElementChildren.js","../../node_modules/react-bootstrap/esm/Col.js","../../node_modules/react-bootstrap/esm/InputGroupContext.js","../../node_modules/react-bootstrap/esm/Feedback.js","../../node_modules/react-bootstrap/esm/FormContext.js","../../node_modules/react-bootstrap/esm/FormCheckInput.js","../../node_modules/react-bootstrap/esm/FormCheckLabel.js","../../node_modules/react-bootstrap/esm/FormCheck.js","../../node_modules/react-bootstrap/esm/FormControl.js","../../node_modules/react-bootstrap/esm/FormFloating.js","../../node_modules/react-bootstrap/esm/FormGroup.js","../../node_modules/react-bootstrap/esm/FormLabel.js","../../node_modules/react-bootstrap/esm/FormRange.js","../../node_modules/react-bootstrap/esm/FormSelect.js","../../node_modules/react-bootstrap/esm/FormText.js","../../node_modules/react-bootstrap/esm/Switch.js","../../node_modules/react-bootstrap/esm/FloatingLabel.js","../../node_modules/react-bootstrap/esm/Form.js","../../node_modules/react-bootstrap/esm/InputGroup.js","../../src/Form/FormContext.tsx","../../src/Form/FormWrapper.tsx","../../src/Form/InputWrapper.tsx","../../src/Form/Control.tsx"],"sourcesContent":["import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { createContext, useState } from 'react';\nimport { ErrorResource } from './FormWrapper';\n\nexport type FormContextType = {\n\tgetError: (key?: keyof ErrorResource) => undefined | ErrorResource | any;\n\tchangeError: (error: undefined | ErrorResource) => void;\n};\nexport const FormContext = createContext<FormContextType>({\n\tgetError: () => undefined,\n\tchangeError: () => {},\n});\nexport default function useForm(): FormContextType {\n\tconst [ErrorR, setError] = useState<undefined | ErrorResource>();\n\n\tfunction getError(key: keyof ErrorResource | undefined = undefined): undefined | ErrorResource | any {\n\t\tif (key === undefined) return ErrorR;\n\t\tif (ErrorR === undefined) return ErrorR;\n\t\tif (ErrorR[key]) return ErrorR[key];\n\t\tthrow new Error('Unexpected.');\n\t}\n\tfunction changeError(error: undefined | ErrorResource = undefined): void {\n\t\tsetError(error === undefined ? undefined : { ...{}, ...error });\n\t}\n\treturn {\n\t\tgetError: getError,\n\t\tchangeError: changeError,\n\t};\n}\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Alert, Form } from 'react-bootstrap';\nimport useForm, { FormContext } from './FormContext';\n\nexport type ResponseResource<T = any> = {\n\tpayloads?: T;\n\terror?: ErrorResource;\n};\nexport type ErrorMessagesType = (string | { [s: string]: any })[] | { [s: string]: any } | string;\nexport type ErrorResource = {\n\tabstract?: string;\n\ttitle?: string;\n\tcode?: number;\n\tmessages?: ErrorMessagesType;\n};\nexport type ErrorMessagesProps = {\n\tmessages?: (string | { [s: string]: any })[] | (string | { [s: string]: any } | any);\n};\nexport type FormWrapperProps = React.PropsWithChildren & {\n\tonSubmit: (e: FormEvent<HTMLFormElement>) => Promise<ResponseResource>;\n\tsetButtonDisabled?: React.Dispatch<React.SetStateAction<boolean>>;\n\tsuccess?: (payloads: object | any) => void;\n\tsuccessMessage?: string;\n\tsuccessMessageTimeout?: number;\n\tErrorMessages?: (props: ErrorMessagesProps) => JSX.Element;\n};\nexport default function FormWrapper(props: FormWrapperProps): JSX.Element {\n\tconst [Validated, setValidated] = useState<boolean>(false);\n\tconst [ButtonDisabled, setButtonDisabled] = useState<boolean>(false);\n\t//const [Error, setError] = useState<undefined | ErrorResource>(undefined);\n\tconst [Success, setSuccess] = useState<boolean>(false);\n\n\tconst Error = useForm();\n\n\tuseEffect(() => {\n\t\tif (props.setButtonDisabled) props.setButtonDisabled(ButtonDisabled);\n\t}, [ButtonDisabled]);\n\n\tasync function onSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n\t\te.preventDefault();\n\t\tsetButtonDisabled(true);\n\t\tError.changeError(undefined);\n\t\tif (!e.currentTarget.checkValidity()) {\n\t\t\tsetValidated(true);\n\t\t\tsetButtonDisabled(false);\n\t\t\treturn;\n\t\t}\n\t\tsetValidated(false);\n\t\tconst response: ResponseResource = await props.onSubmit(e);\n\t\tif (response.error) {\n\t\t\tError.changeError(response.error);\n\t\t\tsetValidated(true);\n\t\t}\n\t\tif (!response.error) {\n\t\t\tsetSuccess(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetSuccess(false);\n\t\t\t}, props.successMessageTimeout || 5000);\n\t\t}\n\t\tif (response.payloads && props.success) props.success(response.payloads);\n\t\tsetButtonDisabled(false);\n\t}\n\treturn (\n\t\t<FormContext.Provider value={Error}>\n\t\t\t<Form noValidate validated={Validated} onSubmit={onSubmit}>\n\t\t\t\t{Error.getError() && (\n\t\t\t\t\t<Alert variant=\"warning\">\n\t\t\t\t\t\t<Alert.Heading>\n\t\t\t\t\t\t\t{Error.getError('abstract') && <span>[{Error.getError('abstract')}]</span>}\n\t\t\t\t\t\t\t{Error.getError('title') && <span>{Error.getError('title')}</span>}\n\t\t\t\t\t\t</Alert.Heading>\n\t\t\t\t\t\t{Error.getError('messages') && props.ErrorMessages ? (\n\t\t\t\t\t\t\t<props.ErrorMessages messages={Error.getError('messages')} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ErrorMessages messages={Error.getError('messages')} ignoreObject />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t\t{Success && <Alert variant=\"success\">{props.successMessage || '処理に成功しました'}</Alert>}\n\t\t\t\t{props.children}\n\t\t\t</Form>\n\t\t</FormContext.Provider>\n\t);\n}\n\nexport function ErrorMessages(props: ErrorMessagesProps & { ignoreObject?: boolean }): JSX.Element {\n\tif (props.messages === undefined) return <></>;\n\t//配列\n\tif (Array.isArray(props.messages))\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{props.messages.map(\n\t\t\t\t\t(message: string | { [s: string]: any }, idx: number): JSX.Element => (\n\t\t\t\t\t\t<ErrorMessages messages={message} key={`errorMessageArray-${idx}`} />\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t);\n\t//文字列\n\tif (typeof props.messages === 'string' || props.messages instanceof String) return <li>{props.messages}</li>;\n\t//オブジェクト\n\tif (props.messages !== null && typeof props.messages === 'object') {\n\t\tif (props.ignoreObject) return <></>;\n\t\treturn (\n\t\t\t<ul className=\"mb-0\">\n\t\t\t\t{Object.keys(props.messages).map(\n\t\t\t\t\t(key: string, idx): JSX.Element => (\n\t\t\t\t\t\t<ErrorMessages messages={props.messages[key]} key={`errorMessageObject-${idx}`} />\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t);\n\t}\n\t//その他\n\treturn <></>;\n}\n","import React, { useContext } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { FormContext } from './FormContext';\nimport { ErrorMessages } from './FormWrapper';\n\nexport type InputWrapperProps = React.PropsWithChildren & {\n\tlabel: string;\n\trequired?: boolean;\n\tname?: string;\n\tfeedbackMessage?: boolean;\n\tclassName?: string;\n};\nexport default function InputWrapper(props: InputWrapperProps): JSX.Element {\n\tconst formContext = useContext(FormContext);\n\treturn (\n\t\t<div className={'mb-2 ' + props.className}>\n\t\t\t<Form.Label>\n\t\t\t\t{props.label}\n\t\t\t\t{props.required && <span className=\"text-danger\">＊</span>}\n\t\t\t</Form.Label>\n\t\t\t<div className=\"ms-2\">{props.children}</div>\n\t\t\t{props.feedbackMessage &&\n\t\t\t\tprops.name &&\n\t\t\t\tformContext.getError('messages') &&\n\t\t\t\tformContext.getError('messages')[props.name] && (\n\t\t\t\t\t<div className=\"text-danger ms-1\">\n\t\t\t\t\t\t<ErrorMessages messages={formContext.getError('messages')[props.name]} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t</div>\n\t);\n}\n","import { Form, FormControlProps, InputGroup } from 'react-bootstrap';\nimport InputWrapper from './InputWrapper';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { FormContext } from './FormContext';\nimport { ErrorMessages, ErrorMessagesType } from './FormWrapper';\n\nexport type ControlProps = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> &\n\tFormControlProps & {\n\t\tlabel: string;\n\t\tvalidMessage?: string[];\n\t\tinvalidMessage?: string[];\n\t\tbeforeText?: React.ReactNode[] | React.ReactNode;\n\t\tafterText?: React.ReactNode[] | React.ReactNode;\n\t\twrapperClassName?: string;\n\t};\nexport default function Control({\n\tlabel,\n\tvalidMessage,\n\tinvalidMessage,\n\tbeforeText,\n\tafterText,\n\twrapperClassName,\n\t...props\n}: ControlProps): JSX.Element {\n\tconst [Messages, setMessages] = useState<undefined | ErrorMessagesType>();\n\tconst formContext = useContext(FormContext);\n\n\tuseEffect(() => {\n\t\tconst messages = formContext.getError('messages');\n\t\tif (messages === undefined) {\n\t\t\tsetMessages(undefined);\n\t\t\treturn;\n\t\t}\n\t\tif (props.name && messages[props.name]) {\n\t\t\tsetMessages({ ...{}, ...messages[props.name] });\n\t\t} else {\n\t\t\tsetMessages(undefined);\n\t\t}\n\t}, [formContext.getError('messages')]);\n\treturn (\n\t\t<InputWrapper\n\t\t\tlabel={label}\n\t\t\trequired={props.required}\n\t\t\tname={props.name}\n\t\t\tfeedbackMessage={false}\n\t\t\tclassName={wrapperClassName}\n\t\t>\n\t\t\t<InputGroup>\n\t\t\t\t{beforeText &&\n\t\t\t\t\t(Array.isArray(beforeText) ? (\n\t\t\t\t\t\tbeforeText.map((node: React.ReactNode): JSX.Element => <InputGroup.Text>{node}</InputGroup.Text>)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<InputGroup.Text>{beforeText}</InputGroup.Text>\n\t\t\t\t\t))}\n\t\t\t\t<Form.Control\n\t\t\t\t\t{...props}\n\t\t\t\t\tplaceholder={props.placeholder || label}\n\t\t\t\t\tisInvalid={props.isInvalid || (Messages ? true : false)}\n\t\t\t\t\tclassName={(props.className || '') + (props.isInvalid || (Messages ? true : false) ? ' border-danger' : '')}\n\t\t\t\t/>\n\t\t\t\t{validMessage && (\n\t\t\t\t\t<Form.Control.Feedback className=\"ms-2\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{validMessage.map(\n\t\t\t\t\t\t\t\t(mes: string): JSX.Element => (\n\t\t\t\t\t\t\t\t\t<li key={mes}>{mes}</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t)}\n\t\t\t\t<Form.Control.Feedback type=\"invalid\" className=\"ms-2 mb-2\">\n\t\t\t\t\t{invalidMessage && (\n\t\t\t\t\t\t<ul className=\"mb-0\">\n\t\t\t\t\t\t\t{invalidMessage.map(\n\t\t\t\t\t\t\t\t(mes: string): JSX.Element => (\n\t\t\t\t\t\t\t\t\t<li key={mes}>{mes}</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t\t{Messages && <ErrorMessages messages={Messages} />}\n\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t{afterText &&\n\t\t\t\t\t(Array.isArray(afterText) ? (\n\t\t\t\t\t\tafterText.map((node: React.ReactNode): JSX.Element => <InputGroup.Text>{node}</InputGroup.Text>)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<InputGroup.Text>{afterText}</InputGroup.Text>\n\t\t\t\t\t))}\n\t\t\t</InputGroup>\n\t\t</InputWrapper>\n\t);\n}\n"],"names":["defaultKey","key","_toPropertyKey","arg","_toPrimitive","input","hint","prim","res","useUncontrolledProp","propValue","defaultValue","handler","wasPropRef","useRef","_useState","useState","stateValue","setState","isProp","wasProp","useCallback","value","_len","args","_key","useUncontrolled","props","config","result","fieldName","_extends2","_ref","Utils.defaultKey","propsValue","rest","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","_extends","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","AlertLink","Anchor","Alert","React.forwardRef","uncontrolledProps","ref","bsPrefix","show","closeLabel","closeVariant","className","children","variant","onClose","dismissible","transition","Fade","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","classNames","_jsx","CloseButton","Alert$1","hasChildOfType","type","React.Children","child","React.isValidElement","useCol","as","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","brkPoint","span","offset","order","infix","Col","colProps","Component","Col$1","context","React.createContext","InputGroupContext","propTypes","PropTypes","Feedback","tooltip","Feedback$1","FormContext","FormContext$2","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormCheckInput$1","FormCheckLabel","htmlFor","FormCheckLabel$1","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","_Fragment","FormCheck$1","FormControl","size","htmlSize","plaintext","readOnly","FormControl$1","FormFloating","FormGroup","FormGroup$1","FormLabel","column","visuallyHidden","columnClass","FormLabel$1","FormRange","FormRange$1","FormSelect","FormSelect$1","FormText","muted","FormText$1","Switch","Switch$1","FloatingLabel","FloatingLabel$1","Form","validated","Form$1","InputGroupText","InputGroupCheckbox","InputGroupRadio","InputGroup","hasValidation","contextValue","InputGroup$1","createContext","useForm","ErrorR","setError","getError","changeError","error","FormWrapper","Validated","setValidated","ButtonDisabled","setButtonDisabled","Success","setSuccess","Error","useEffect","onSubmit","response","jsx","jsxs","ErrorMessages","Fragment","message","idx","InputWrapper","formContext","Control","validMessage","invalidMessage","beforeText","afterText","wrapperClassName","Messages","setMessages","messages","node","mes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}