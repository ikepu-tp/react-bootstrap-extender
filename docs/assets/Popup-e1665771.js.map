{"version":3,"file":"Popup-e1665771.js","sources":["../../node_modules/@restart/hooks/esm/useCallbackRef.js","../../node_modules/@restart/hooks/esm/useMounted.js","../../node_modules/@restart/hooks/esm/usePrevious.js","../../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../../node_modules/@restart/hooks/esm/useUpdatedRef.js","../../node_modules/@restart/hooks/esm/useWillUnmount.js","../../node_modules/dom-helpers/esm/querySelectorAll.js","../../node_modules/dom-helpers/esm/contains.js","../../node_modules/@restart/ui/esm/DataKey.js","../../node_modules/@restart/ui/esm/useWindow.js","../../node_modules/dom-helpers/esm/scrollbarSize.js","../../node_modules/dom-helpers/esm/activeElement.js","../../node_modules/@restart/ui/esm/getScrollbarWidth.js","../../node_modules/@restart/ui/esm/ModalManager.js","../../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../../node_modules/@restart/ui/esm/NoopTransition.js","../../node_modules/@restart/ui/esm/ImperativeTransition.js","../../node_modules/@restart/ui/esm/utils.js","../../node_modules/@restart/ui/esm/Modal.js","../../node_modules/dom-helpers/esm/hasClass.js","../../node_modules/dom-helpers/esm/addClass.js","../../node_modules/dom-helpers/esm/removeClass.js","../../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../../node_modules/react-bootstrap/esm/ModalBody.js","../../node_modules/react-bootstrap/esm/ModalContext.js","../../node_modules/react-bootstrap/esm/ModalDialog.js","../../node_modules/react-bootstrap/esm/ModalFooter.js","../../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../../node_modules/react-bootstrap/esm/ModalHeader.js","../../node_modules/react-bootstrap/esm/ModalTitle.js","../../node_modules/react-bootstrap/esm/Modal.js","../../src/Popup.tsx"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import React, { useEffect, useState } from 'react';\nimport { Modal, ModalProps } from 'react-bootstrap';\n\nexport type PopupProps = ModalProps & {\n\theader?: string | JSX.Element | React.ReactNode | any;\n\tfooter?: string | JSX.Element | React.ReactNode | any;\n\tshowToggle?: string | JSX.Element | React.ReactNode | any;\n};\nexport default function Popup({\n\theader,\n\tfooter,\n\tchildren,\n\tshow,\n\tonHide,\n\tshowToggle,\n\t...props\n}: PopupProps): JSX.Element {\n\tconst [Show, setShow] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tif (show !== undefined) setShow(show);\n\t}, [show]);\n\tfunction changeShow(): void {\n\t\tsetShow(!Show);\n\t\tif (onHide) onHide();\n\t}\n\treturn (\n\t\t<>\n\t\t\t{showToggle && (\n\t\t\t\t<div className=\"d-inline-block\" onClick={changeShow}>\n\t\t\t\t\t{showToggle}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Modal animation scrollable centered {...props} show={Show} onHide={changeShow}>\n\t\t\t\t{header && <Modal.Header closeButton>{header}</Modal.Header>}\n\t\t\t\t<Modal.Body>{children}</Modal.Body>\n\t\t\t\t{footer && <Modal.Footer>{footer}</Modal.Footer>}\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n"],"names":["useCallbackRef","useState","useMounted","mounted","useRef","isMounted","useEffect","usePrevious","value","ref","isReactNative","isDOM","useIsomorphicEffect","useLayoutEffect","useUpdatedRef","valueRef","useWillUnmount","fn","onUnmount","toArray","qsa","element","selector","contains","context","node","ATTRIBUTE_PREFIX","dataAttr","property","Context","createContext","canUseDOM","useWindow","useContext","size","scrollbarSize","recalc","scrollDiv","activeElement","doc","ownerDocument","active","getBodyScrollbarWidth","window","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","_modal","containerState","style","paddingProp","container","css","m","modal","modalIdx","ModalManager$1","resolveContainerRef","document","useWaitForDOMRef","onResolved","resolvedRef","setRef","earlyRef","nextRef","NoopTransition","children","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","useEventCallback","combinedRef","useMergedRefs","child","cloneElement","useTransition","onTransition","isInitialRef","handleTransition","stale","ImperativeTransition","onEntered","transition","exited","setExited","options","onFinish","error","renderTransition","Component","runTransition","props","_jsx","isEscKey","_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","key","i","manager","getManager","useModalManager","provided","modalManager","useCallback","Modal","forwardRef","_ref","show","role","className","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","ownerWindow","prevShow","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","e","handleHidden","args","dialogProps","dialog","React.cloneElement","backdropElement","_Fragment","ReactDOM","_jsxs","BaseModal","hasClass","addClass","replaceClassName","origClass","classToRemove","removeClass","Selector","BootstrapModalManager","prop","adjust","actual","marginProp","el","sharedManager","getSharedManager","ModalBody","createWithBsPrefix","ModalContext","React.createContext","ModalContext$1","ModalDialog","React.forwardRef","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","ModalDialog$1","ModalFooter","AbstractModalHeader","closeLabel","closeVariant","closeButton","handleClick","CloseButton","AbstractModalHeader$1","ModalHeader","ModalHeader$1","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","getScrollbarSize","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","handleEscapeKeyDown","handleEnter","isAppearing","handleExit","handleEntering","addEventListener","backdropProps","baseModalStyle","Modal$1","Popup","header","footer","showToggle","Show","setShow","changeShow","jsxs","Fragment","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}